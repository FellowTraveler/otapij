/************************************************************
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

 *                 M O N E Y C H A N G E R
 *
 *  Open Transactions:
 *       Financial Cryptography and Digital Cash
 *       Library, Protocol, API, Server, CLI, GUI 
 *    
 *       -- Anonymous Numbered Accounts.
 *       -- Untraceable Digital Cash.
 *       -- Triple-Signed Receipts.
 *       -- Cheques, Vouchers, Transfers, Inboxes.
 *       -- Basket Currencies, Markets, Payment Plans.
 *       -- Signed, XML, Ricardian-style Contracts.
 *       -- Scripted smart contracts.
 *    
 *  Copyright (C) 2010-2013 by "Fellow Traveler" (A pseudonym)
 *
 *  EMAIL:
 *  FellowTraveler@rayservers.net --- SEE PGP KEY BELOW.
 *  F3llowTraveler@gmail.com --- (not preferred.)
 *  
 *  FINGERPRINT:
 *  9DD5 90EB 9292 4B48 0484  7910 0308 00ED F951 BB8E
 *
 *  BITCOIN:  1NtTPVVjDsUfDWybS4BwvHpG2pdS9RnYyQ
 *
 *  OFFICIAL PROJECT WIKI:
 *  https://github.com/FellowTraveler/Moneychanger
 *  https://github.com/FellowTraveler/Open-Transactions/wiki
 *
 *  WEBSITE:
 *  http://www.OpenTransactions.org/
 *    
 *  Components and licensing:
 *   -- Moneychanger..A Java client GUI.....LICENSE:.....GPLv3
 *   -- otlib.........A class library.......LICENSE:...LAGPLv3
 *   -- otapi.........A client API..........LICENSE:...LAGPLv3
 *   -- opentxs/ot....Command-line client...LICENSE:...LAGPLv3
 *   -- otserver......Server Application....LICENSE:....AGPLv3
 *  Github.com/FellowTraveler/Open-Transactions/wiki/Components
 *
 *  All of the above OT components were designed and written by
 *  Fellow Traveler, with the exception of Moneychanger, which
 *  was contracted out to Vicky C (bitcointrader4@gmail.com).
 *  The open-source community has since actively contributed.
 *
 *  -----------------------------------------------------
 *
 *   LICENSE:
 *   This program is free software: you can redistribute it
 *   and/or modify it under the terms of the GNU General
 *   Public License as published by the Free Software
 *   Foundation, either version 3 of the License, or (at your
 *   option) any later version.
 *
 *   You should have received a copy of the GNU General
 *   Public License along with this program.  If not, see:
 *   http://www.gnu.org/licenses/
 *
 *   If you would like to use this software outside of the free
 *   software license, please contact FellowTraveler.
 *   (Unfortunately many will run anonymously and untraceably,
 *   so who could really stop them?)
 *   
 *   DISCLAIMER:
 *   This program is distributed in the hope that it will be
 *   useful, but WITHOUT ANY WARRANTY; without even the implied
 *   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *   PURPOSE.  See the GNU General Public License for more
 *   details.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (Darwin)

iQIcBAEBAgAGBQJRSsfMAAoJEAMIAO35UbuOCTQQAJWUR6l+IbUGYPfudumDBZep
XWu5aUVXPt+HTetWobTT3VrSEoQTV+t3Qk10EHzIIQNIvDNkA3cfQod5xMk3CZgm
MuA1PTDZdmrcm1lf92rVULaiB2tHYuPKYryFfkmNcidoWaJAI0ny/AE4gSdopKuU
MCLhB+fWpPv+nK9Qjb8duvRyFjYeLxrnwjfy05zNIY5Fj4HsCzmf6G6xqbUOZzBA
Zc4RjfKeg9MVJl4ObIKhDfpicCTVZkgFPVGeok/KtmiPRgV1HtaHqib4RiN9VMkr
YKbOUOb931pukRJQv+z5fT1EQkSVBDO5Th2q7Nls5idMgtR2BPXxVhs+e8OM4IJK
W+1V0WHWHuE+6SRKQrPU4hAmXrtmGRtu474TTmPlW6dCqFgvLWBuxeTRCPf4l29T
ImEOxdjFwlMVoxsazE3KE/YMbX7IiZqgLx/C4OTPlz7BVLhphzPRXA7KhhRFi1Df
jie5oRhJ4zbTFQI8SKsjbx0H/4VpB+Vtjx6fOxnLUpjZAE7G6ZL2zOEK8rtiGeiH
0AWK2rKWP8oOMnQwBMP838WRtxFmaOIhvVqAngjynSmVouf1RKKU7y7/YQ0iVDcN
WqAhaZhvszQ6UCDAEi11rfdC2qt29Jds9lS41YGqvYaan+b50lr5u59Uknz2LC94
HS4/gWtdVEVnXDda0wk9
=CbRB
-----END PGP SIGNATURE-----
 **************************************************************/


package com.moneychanger.ui.panels;

import com.moneychanger.core.BitcoinAccount;
import com.moneychanger.core.dataobjects.BitcoinDetails;
import com.moneychanger.ui.dialogs.BitcoinTrnDetailsDialog;
import com.moneychanger.ui.model.BitcoinReceivedTableModel;
import com.moneychanger.ui.model.BitcoinReceivingAddrTableModel;
import com.moneychanger.ui.model.BitcoinSentTableModel;
import java.util.Map;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author Vicky C
 */
public class BitcoinAccountBottomPanel extends javax.swing.JPanel {

    private static Map sentBoxMap;
    private static Map receivedBoxMap;
    private static Map receivedAddressBoxMap;
    private static String serverID;

    /** Creates new form BitcoinAccountBottomPanel */
    public BitcoinAccountBottomPanel() {
        initComponents();
        initvalues();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jTabbedPane_BitcoinInfo = new javax.swing.JTabbedPane();
        jScrollPane_Sent = new javax.swing.JScrollPane();
        jTable5 = new com.moneychanger.ui.custom.CustomTable();
        jScrollPane_Recived = new javax.swing.JScrollPane();
        jTable6 = new com.moneychanger.ui.custom.CustomTable();
        jScrollPane_Addresses = new javax.swing.JScrollPane();
        jTable7 = new com.moneychanger.ui.custom.CustomTable();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jButton_Refresh = new javax.swing.JButton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setName("Form"); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        filler1.setName("filler1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 2.0;
        add(filler1, gridBagConstraints);

        filler2.setName("filler2"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(filler2, gridBagConstraints);

        jTabbedPane_BitcoinInfo.setName("jTabbedPane_BitcoinInfo"); // NOI18N
        jTabbedPane_BitcoinInfo.setPreferredSize(new java.awt.Dimension(200, 200));
        jTabbedPane_BitcoinInfo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane_BitcoinInfoStateChanged(evt);
            }
        });

        jScrollPane_Sent.setName("jScrollPane_Sent"); // NOI18N

        jTable5.setModel(new com.moneychanger.ui.model.BitcoinSentTableModel());
        jTable5.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable5.setName("jTable5"); // NOI18N
        jTable5.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane_Sent.setViewportView(jTable5);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(BitcoinAccountBottomPanel.class);
        jTabbedPane_BitcoinInfo.addTab(resourceMap.getString("jScrollPane_Sent.TabConstraints.tabTitle"), jScrollPane_Sent); // NOI18N

        jScrollPane_Recived.setName("jScrollPane_Recived"); // NOI18N

        jTable6.setModel(new com.moneychanger.ui.model.BitcoinReceivedTableModel());
        jTable6.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable6.setName("jTable6"); // NOI18N
        jTable6.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable6MouseClicked(evt);
            }
        });
        jScrollPane_Recived.setViewportView(jTable6);

        jTabbedPane_BitcoinInfo.addTab(resourceMap.getString("jScrollPane_Recived.TabConstraints.tabTitle"), jScrollPane_Recived); // NOI18N

        jScrollPane_Addresses.setName("jScrollPane_Addresses"); // NOI18N

        jTable7.setModel(new com.moneychanger.ui.model.BitcoinReceivingAddrTableModel());
        jTable7.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable7.setName("jTable7"); // NOI18N
        jTable7.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable7MouseClicked(evt);
            }
        });
        jScrollPane_Addresses.setViewportView(jTable7);

        jTabbedPane_BitcoinInfo.addTab(resourceMap.getString("jScrollPane_Addresses.TabConstraints.tabTitle"), jScrollPane_Addresses); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 25.0;
        gridBagConstraints.weighty = 50.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jTabbedPane_BitcoinInfo, gridBagConstraints);

        filler3.setName("filler3"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(filler3, gridBagConstraints);

        filler4.setName("filler4"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(filler4, gridBagConstraints);

        filler5.setName("filler5"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(filler5, gridBagConstraints);

        jButton_Refresh.setText(resourceMap.getString("jButton_Refresh.text")); // NOI18N
        jButton_Refresh.setToolTipText(resourceMap.getString("jButton_Refresh.toolTipText")); // NOI18N
        jButton_Refresh.setName("jButton_Refresh");
        jButton_Refresh.setVisible(false);
        jButton_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RefreshActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jButton_Refresh, gridBagConstraints);

        filler6.setName("filler6"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(filler6, gridBagConstraints);

        filler7.setName("filler7"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 2.0;
        add(filler7, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        System.out.println("Count:" + evt.getClickCount());
        if (evt.getClickCount() == 2) {
            String key = (String) jTable5.getModel().getValueAt(jTable5.getSelectedRow(), 5);
            System.out.println("In Sent box double clcik, key:" + key);
            System.out.println("sentBoxMap keys:"+sentBoxMap);
            String[] row = (String[]) sentBoxMap.get(key);
            if (row != null) {
                new BitcoinTrnDetailsDialog(null, true,new BitcoinAccount(serverID).getLabel(row[3]),key,row[4]).setVisible(true);
            }
        }
    }//GEN-LAST:event_jTable5MouseClicked

    private void jTable6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MouseClicked
        System.out.println("Count:" + evt.getClickCount());
        if (evt.getClickCount() == 2) {
            String key = (String) jTable6.getModel().getValueAt(jTable6.getSelectedRow(), 5);
            System.out.println("In Received box double clcik, key:" + key);
            System.out.println("receivedBoxMap keys:"+receivedBoxMap);
            String[] row = (String[]) receivedBoxMap.get(key);
            if (row != null) {
                new BitcoinTrnDetailsDialog(null, true,new BitcoinAccount(serverID).getLabel(row[3]),key,row[4]).setVisible(true);
            }
        }
    }//GEN-LAST:event_jTable6MouseClicked

    private void jTable7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable7MouseClicked

    private void jTabbedPane_BitcoinInfoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane_BitcoinInfoStateChanged
        JTabbedPane pane = (JTabbedPane) evt.getSource();
        int sel = pane.getSelectedIndex();
        System.out.println("State changed:" + sel);
        if (sel == 1) {
            jButton_Refresh.setVisible(true);
            repaint();
        } else {
            jButton_Refresh.setVisible(false);
            repaint();
        }
    }//GEN-LAST:event_jTabbedPane_BitcoinInfoStateChanged

    private void jButton_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RefreshActionPerformed
        receivedBoxMap = new BitcoinAccount(serverID).getReceivedBoxData("");
        ((BitcoinReceivedTableModel) jTable6.getModel()).setValue(receivedBoxMap,jTable6);

    }//GEN-LAST:event_jButton_RefreshActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.JButton jButton_Refresh;
    private javax.swing.JScrollPane jScrollPane_Addresses;
    private javax.swing.JScrollPane jScrollPane_Recived;
    private javax.swing.JScrollPane jScrollPane_Sent;
    private javax.swing.JTabbedPane jTabbedPane_BitcoinInfo;
    private static javax.swing.JTable jTable5;
    private static javax.swing.JTable jTable6;
    private static javax.swing.JTable jTable7;
    // End of variables declaration//GEN-END:variables

    public static void clearPanel() {
        if (jTable5 != null && jTable6 != null && jTable7 != null) {
            ((BitcoinSentTableModel) jTable5.getModel()).clearValue();
            ((BitcoinReceivedTableModel) jTable6.getModel()).clearValue();
            ((BitcoinReceivingAddrTableModel) jTable7.getModel()).clearValue();
        }
    }

    public static void populateBitcoinDetails(BitcoinDetails details) {
        System.out.println("populateBitcoinDetails");
        if (details != null) {
            sentBoxMap = details.getSentboxData();
            receivedBoxMap = details.getReceivedboxData();
            receivedAddressBoxMap = details.getReceivedAddrboxData();
            serverID = details.getServerID();
            ((BitcoinSentTableModel) jTable5.getModel()).setValue(sentBoxMap, jTable5);
            ((BitcoinReceivedTableModel) jTable6.getModel()).setValue(receivedBoxMap,jTable6);
            ((BitcoinReceivingAddrTableModel) jTable7.getModel()).setValue(receivedAddressBoxMap,jTable7);
        }
    }

    public static void setReceivingAddrTable(String account){
        receivedAddressBoxMap = new BitcoinAccount(serverID).getRecevingAddrBoxData(account);
        ((BitcoinReceivingAddrTableModel) jTable7.getModel()).setValue(receivedAddressBoxMap,jTable7);
    }

    public static void setSentBoxTable(String account){
        sentBoxMap = new BitcoinAccount(serverID).getSentBoxData(account);
        ((BitcoinSentTableModel) jTable5.getModel()).setValue(sentBoxMap, jTable5);
    }

    private void initvalues() {

        jTable5.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable6.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        TableColumn col = jTable5.getColumnModel().getColumn(0);

        col.setPreferredWidth(120);

        col = jTable5.getColumnModel().getColumn(1);
        col.setPreferredWidth(160);

        col = jTable5.getColumnModel().getColumn(2);
        col.setPreferredWidth(50);

        col = jTable5.getColumnModel().getColumn(3);
        col.setPreferredWidth(240);

        col = jTable5.getColumnModel().getColumn(4);
        col.setPreferredWidth(200);

        col = jTable6.getColumnModel().getColumn(0);

        col.setPreferredWidth(120);

        col = jTable6.getColumnModel().getColumn(1);
        col.setPreferredWidth(180);

        col = jTable6.getColumnModel().getColumn(2);
        col.setPreferredWidth(50);

        col = jTable6.getColumnModel().getColumn(3);
        col.setPreferredWidth(240);

        col = jTable6.getColumnModel().getColumn(4);
        col.setPreferredWidth(220);
        
        col = jTable7.getColumnModel().getColumn(0);
        col.setPreferredWidth(360);
        
        col = jTable7.getColumnModel().getColumn(1);
        col.setPreferredWidth(255);
        
        col = jTable7.getColumnModel().getColumn(2);
        col.setPreferredWidth(60);


    }
}
